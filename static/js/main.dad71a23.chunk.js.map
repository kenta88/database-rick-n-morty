{"version":3,"sources":["Components/Header/logo-rick-n-morty.png","Components/Header/Header.js","Components/Card/Card.js","Components/Grid/Grid.js","Components/Paginator/Paginator.js","Components/SearchBox/SearchBox.js","App.js","index.js"],"names":["module","exports","Header","className","src","Logo","alt","Card","character","isSelected","onSelectChange","selectedClass","image","name","species","location","onClick","id","Grid","nextFavourites","state","favourites","filter","selectedId","push","setState","this","props","characters","isLoading","map","key","includes","React","Component","Paginator","currentPage","onChange","totalPages","nextPage","SearchBox","onInputChange","e","searchKey","target","value","onClickSubmit","onSubmit","type","placeholder","App","componentDidMount","fetchCharacters","componentDidUpdate","prevProps","prevState","a","url","URL","params","page","Object","keys","forEach","searchParams","append","fetch","response","json","results","info","pages","console","log","onPaginatorChange","onSubmitSearch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HAAAA,EAAOC,QAAU,IAA0B,+C,gUCe5BC,MAVf,WACI,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKC,IAAKC,IAAMC,IAAI,Y,cC0BrBC,MA9Bf,YAA0D,IAA1CC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,eAI7BC,EAAgBF,EAAa,WAAa,GAChD,OACI,yBAAKN,UAAS,eAAUQ,IACpB,yBAAKP,IAAKI,EAAUI,MAAON,IAAKE,EAAUK,OAC1C,yBAAKV,UAAU,aACX,uBAAGA,UAAU,mBACT,uCACCK,EAAUK,MAEf,uBAAGV,UAAU,uBACRK,EAAUM,QADf,IACwB,sCADxB,IAC2CN,EAAUO,SAASF,OAGlE,4BAAQV,UAAU,YAAYa,QAhBhB,WAClBN,EAAeF,EAAUS,GAAIR,KAgBpBA,EAAa,SAAW,SCgC1BS,G,wDAhDX,aAAe,IAAD,8BACV,gBAMJR,eAAiB,SAACO,EAAIR,GAClB,IAAIU,EAAc,YAAO,EAAKC,MAAMC,YAChCZ,EAGAU,EAAiBA,EAAeG,QAAO,SAACC,GAAD,OAAgBA,IAAeN,KAFtEE,EAAeK,KAAKP,GAKxB,EAAKQ,SAAS,CACVJ,WAAYF,KAdhB,EAAKC,MAAQ,CACTC,WAAY,IAHN,E,qDAoBJ,IAAD,SAC6BK,KAAKC,MAA/BC,EADH,EACGA,WAAYC,EADf,EACeA,UACZR,EAAeK,KAAKN,MAApBC,WACR,OACI,yBAAKlB,UAAU,kBACVyB,EAAWE,KAAI,SAACtB,GAAD,OACZ,kBAAC,EAAD,CACIuB,IAAKvB,EAAUS,GACfT,UAAWA,EACXC,WAAYY,EAAWW,SAASxB,EAAUS,IAC1CP,eAAgB,EAAKA,oBAG5BmB,GACG,yBAAK1B,UAAU,WACX,gD,GApCL8B,IAAMC,YCgCVC,G,MAjCG,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAgBxC,OACI,yBAAKnC,UAAU,uBACX,4BAAQa,QAhBI,WAChB,IAAMuB,EAAWH,EAAc,EAC5BG,EAAW,GACVF,EAASE,KAaT,QACA,mCACS,8BAAOH,GADhB,OACwCE,GAExC,4BAAQtB,QAbI,WAChB,IAAMuB,EAAWH,EAAc,EAC5BG,GAAYD,GACXD,EAASE,KAUT,WCWGC,G,wDA/BX,aAAe,IAAD,8BACV,gBAMJC,cAAgB,SAACC,GACb,EAAKjB,SAAS,CAACkB,UAAWD,EAAEE,OAAOC,SARzB,EAWdC,cAAgB,WACZ,EAAKnB,MAAMoB,SAAS,EAAK3B,MAAMuB,YAV/B,EAAKvB,MAAQ,CACTuB,UAAW,IAHL,E,qDAgBV,OACI,yBAAKxC,UAAU,wBACf,2BAAO6C,KAAK,OAAOC,YAAY,SAASZ,SAAUX,KAAKe,gBACvD,4BAAQzB,QAASU,KAAKoB,eACjB,U,GArBOb,IAAMC,YCmFfgB,G,wDAhFb,aAAe,IAAD,8BACZ,gBAUFC,kBAAoB,WAClB,EAAKC,mBAZO,EAedC,mBAAqB,SAACC,EAAWC,GAE7BA,EAAUnB,cAAgB,EAAKhB,MAAMgB,aACrCmB,EAAUZ,YAAc,EAAKvB,MAAMuB,WAEnC,EAAKS,mBApBK,EAwBdA,gBAxBc,sBAwBI,wCAAAI,EAAA,wEAEmB,EAAKpC,MAA/BgB,EAFO,EAEPA,YAAaO,EAFN,EAEMA,UACpB,EAAKlB,SAAS,CAACI,WAAW,IAEpB4B,EAAM,IAAIC,IAAI,6CAEdC,EAAS,CACbC,KAAMxB,EACNvB,KAAM8B,GAGRkB,OAAOC,KAAKH,GAAQI,SAAQ,SAAChC,GAC3B0B,EAAIO,aAAaC,OAAOlC,EAAK4B,EAAO5B,OAbxB,SAgBSmC,MAAMT,GAhBf,cAgBRU,EAhBQ,iBAiBKA,EAASC,OAjBd,QAiBRA,EAjBQ,OAkBd,EAAK3C,SAAS,CACZG,WAAYwC,EAAKC,QACjB/B,WAAY8B,EAAKE,KAAKC,QApBV,kDAuBdC,QAAQC,IAAR,MAvBc,yBAyBd,EAAKhD,SAAS,CAACI,WAAW,IAzBZ,6EAxBJ,EAqDd6C,kBAAoB,SAACnC,GACnB,EAAKd,SAAS,CAACW,YAAaG,KAtDhB,EAyDdoC,eAAiB,SAAChC,GAChB,EAAKlB,SAAS,CAACkB,eAxDf,EAAKvB,MAAQ,CACXuB,UAAW,GACXP,YAAa,EACbE,WAAY,EACZT,WAAW,EACXD,WAAY,IAPF,E,qDA6DJ,IAAD,EACkDF,KAAKN,MAAvDQ,EADA,EACAA,WAAYC,EADZ,EACYA,UAAWO,EADvB,EACuBA,YAAaE,EADpC,EACoCA,WAC3C,OACE,yBAAKnC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACE4C,SAAUrB,KAAKiD,iBAEjB,kBAAC,EAAD,CAAM/C,WAAYA,EAAYC,UAAWA,IACzC,kBAAC,EAAD,CACEO,YAAaA,EACbC,SAAUX,KAAKgD,kBACfpC,WAAYA,S,GA1EJL,IAAMC,YCHxB0C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.dad71a23.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-rick-n-morty.005e3536.png\";","import React from 'react';\r\nimport \"./Header.css\"\r\n\r\nimport Logo from \"./logo-rick-n-morty.png\";\r\n\r\nfunction Header () {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <img src={Logo} alt=\"logo\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport \"./Card.css\";\r\n\r\nfunction Card({ character, isSelected, onSelectChange }) {\r\n    const onClickButton = () => {\r\n        onSelectChange(character.id, isSelected);\r\n    }\r\n    const selectedClass = isSelected ? \"selected\" : \"\";\r\n    return (\r\n        <div className={`card ${selectedClass}`}>\r\n            <img src={character.image} alt={character.name} />\r\n            <div className=\"card-info\">\r\n                <p className=\"card-info__name\">\r\n                    <span>Name:</span>\r\n                    {character.name}\r\n                </p>\r\n                <p className=\"card-info__generics\">\r\n                    {character.species} <span>from</span> {character.location.name}\r\n                </p>\r\n            </div>\r\n            <button className=\"favourite\" onClick={onClickButton}>\r\n                {isSelected ? \"Remove\" : \"Add\"}\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nCard.propTypes = {\r\n    character: PropTypes.object.isRequired,\r\n    isSelected: PropTypes.bool.isRequired,\r\n    onSelectChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"../Card/Card\";\r\n\r\nimport \"./Grid.css\";\r\n\r\nclass Grid extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            favourites: [],\r\n        }\r\n    }\r\n\r\n    onSelectChange = (id, isSelected) => {\r\n        let nextFavourites = [...this.state.favourites];\r\n        if(!isSelected) {\r\n            nextFavourites.push(id);\r\n        } else {\r\n            nextFavourites = nextFavourites.filter((selectedId) => selectedId !== id)\r\n        }\r\n\r\n        this.setState({\r\n            favourites: nextFavourites,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { characters, isLoading } = this.props;\r\n        const { favourites } = this.state;\r\n        return (\r\n            <div className=\"container grid\">\r\n                {characters.map((character) => (\r\n                    <Card\r\n                        key={character.id}\r\n                        character={character}\r\n                        isSelected={favourites.includes(character.id)}\r\n                        onSelectChange={this.onSelectChange}\r\n                    />\r\n                ))}\r\n                {isLoading && (\r\n                    <div className=\"loading\">\r\n                        <p>Loading ...</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGrid.propTypes = {\r\n    characters: PropTypes.array.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport Proptypes from \"prop-types\";\r\n\r\nimport \"./Paginator.css\";\r\n\r\nconst Paginator = ({ currentPage, onChange, totalPages }) => {\r\n\r\n    const onClickPrev = () => {\r\n        const nextPage = currentPage - 1;\r\n        if(nextPage > 0) {\r\n            onChange(nextPage);\r\n        }\r\n    };\r\n\r\n    const onClickNext = () => {\r\n        const nextPage = currentPage + 1;\r\n        if(nextPage <= totalPages) {\r\n            onChange(nextPage);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className=\"container paginator\">\r\n            <button onClick={onClickPrev}>Prev</button>\r\n            <p>\r\n                Page <span>{currentPage}</span> of {totalPages}\r\n            </p>\r\n            <button onClick={onClickNext}>Next</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nPaginator.propTypes = {\r\n    currentPage: Proptypes.number.isRequired,\r\n    totalPages: Proptypes.number.isRequired,\r\n    onChange: Proptypes.func.isRequired,\r\n}\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport Proptypes from \"prop-types\";\r\n\r\nimport \"./SearchBox.css\";\r\n\r\n\r\nclass SearchBox extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            searchKey: \"\"\r\n        };\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({searchKey: e.target.value})\r\n    }\r\n\r\n    onClickSubmit = () => {\r\n        this.props.onSubmit(this.state.searchKey);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container search-box\">\r\n            <input type=\"text\" placeholder=\"Search\" onChange={this.onInputChange}/>\r\n            <button onClick={this.onClickSubmit}>\r\n                {'>'}\r\n            </button>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearchBox.propTypes = {\r\n    onSubmit: Proptypes.func.isRequired,\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport Header from \"./Components/Header/Header\";\r\nimport Grid from \"./Components/Grid/Grid\";\r\nimport Paginator from \"./Components/Paginator/Paginator\";\r\nimport SearchBox from \"./Components/SearchBox/SearchBox\";\r\n\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      searchKey: \"\",\r\n      currentPage: 1,\r\n      totalPages: 1,\r\n      isLoading: false,\r\n      characters: [], \r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.fetchCharacters();\r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if(\r\n      prevState.currentPage !== this.state.currentPage ||\r\n      prevState.searchKey !== this.state.searchKey\r\n    ) {\r\n      this.fetchCharacters();\r\n    }\r\n  }\r\n\r\n  fetchCharacters = async () => {\r\n    try {\r\n      const {currentPage, searchKey} = this.state;\r\n      this.setState({isLoading: true});\r\n\r\n      const url = new URL(\"https://rickandmortyapi.com/api/character\");\r\n\r\n      const params = {\r\n        page: currentPage,\r\n        name: searchKey,\r\n      };\r\n\r\n      Object.keys(params).forEach((key) => {\r\n        url.searchParams.append(key, params[key]);\r\n      });\r\n\r\n      const response = await fetch(url);\r\n      const json = await response.json();\r\n      this.setState({\r\n        characters: json.results,\r\n        totalPages: json.info.pages,\r\n      });\r\n    } catch(e) {\r\n      console.log(e);\r\n    } finally {\r\n      this.setState({isLoading: false});\r\n    }\r\n  }\r\n\r\n  onPaginatorChange = (nextPage) => {\r\n    this.setState({currentPage: nextPage});\r\n  }\r\n\r\n  onSubmitSearch = (searchKey) => {\r\n    this.setState({searchKey});\r\n  }\r\n\r\n  render() {\r\n    const {characters, isLoading, currentPage, totalPages} = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <SearchBox\r\n          onSubmit={this.onSubmitSearch}\r\n        />\r\n        <Grid characters={characters} isLoading={isLoading}/>\r\n        <Paginator \r\n          currentPage={currentPage}\r\n          onChange={this.onPaginatorChange}\r\n          totalPages={totalPages}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}